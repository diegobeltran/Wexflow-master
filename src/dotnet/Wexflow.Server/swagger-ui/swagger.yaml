swagger: "2.0"
info:
  description: "Wexflow's RESTful API."
  version: "5.3"
  title: "Swagger Wexflow"
  contact:
    email: "akram.elassas@gmail.com"
  license:
    name: "MIT"
    url: "https://opensource.org/licenses/MIT"
host: "localhost:8000"
basePath: "/wexflow"
tags:
- name: "Dashboard"
  description: "Operations about dashboard"
- name: "Manager"
  description: "Operations about manager"
- name: "Designer"
  description: "Operations about designer"
- name: "History"
  description: "Operations about history"
- name: "Users"
  description: "Operations about users"
- name: "Profiles"
  description: "Operations about profiles"
#schemes:
#- "https"
#- "http"
paths:
  /statusCount:
    get:
     tags:
     - "Dashboard"
     summary: "Returns status count"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"

  /entriesCountByDate:
    get:
     tags:
     - "Dashboard"
     summary: "Returns entries count by keyword and date filter"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword  
        - in: query
          name: from
          type: "number"
          description: From 
        - in: query
          name: to
          type: "number"
          description: To
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /searchEntriesByPageOrderBy:
    get:
     tags:
     - "Dashboard"
     summary: "Searches for entries"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword  
        - in: query
          name: from
          type: "number"
          description: From 
        - in: query
          name: to
          type: "number"
          description: To
        - in: query
          name: page
          type: "number"
          description: Page number
        - in: query
          name: entriesCount
          type: "number"
          description: Number of entries
        - in: query
          name: heo
          type: "number"
          description: Entry order by type (From 0 to 11)
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
    
  /entryStatusDateMin:
    get:
     tags:
     - "Dashboard"
     summary: "Returns entry min date"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /entryStatusDateMax:
    get:
     tags:
     - "Dashboard"
     summary: "Returns entry max date"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /entryLogs:
    get:
     tags:
     - "Dashboard"
     summary: "Returns entry logs"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: id
          type: "string"
          description: Entry id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 

  /search:
    get:
     tags:
     - "Manager"
     summary: "Search for workflows"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /searchApprovalWorkflows:
    get:
     tags:
     - "Manager"
     summary: "Search for approval workflows"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /workflow:
    get:
     tags:
     - "Manager"
     summary: "Search for approval workflows"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /start:
    post:
     tags:
     - "Manager"
     summary: "Starts a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
      
  /startWithVariables:
    post:
     tags:
     - "Manager"
     summary: "Starts a workflow with variables"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/startWithVariables"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /stop:
    post:
     tags:
     - "Manager"
     summary: "Stops a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
        - in: query
          name: i
          type: "string"
          description: Instance id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"     
  
  /suspend:
    post:
     tags:
     - "Manager"
     summary: "Suspends a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
        - in: query
          name: i
          type: "string"
          description: Instance id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 
  
  /resume:
    post:
     tags:
     - "Manager"
     summary: "Resumes a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
        - in: query
          name: i
          type: "string"
          description: Instance id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"  
  
  /approve:
    post:
     tags:
     - "Manager"
     summary: "Approves a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
        - in: query
          name: i
          type: "string"
          description: Instance id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 
  
  /reject:
    post:
     tags:
     - "Manager"
     summary: "Rejects a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id
        - in: query
          name: i
          type: "string"
          description: Instance id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 
      
  /tasks/{id}:
    get:
     tags:
     - "Designer"
     summary: "Returns workflow's tasks"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "id"
          in: "path"
          description: "Workflow id"
          required: true
          type: "integer"
          format: "int64"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /xml/{id}:
    get:
     tags:
     - "Designer"
     summary: "Returns a workflow as XML"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "id"
          in: "path"
          description: "Workflow id"
          required: true
          type: "integer"
          format: "int64"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /json/{id}:
    get:
     tags:
     - "Designer"
     summary: "Returns a workflow as JSON"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "id"
          in: "path"
          description: "Workflow id"
          required: true
          type: "integer"
          format: "int64"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 
  
  /taskNames:
    get:
     tags:
     - "Designer"
     summary: "Returns task names"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /settings/{taskName}:
    get:
     tags:
     - "Designer"
     summary: "Returns task settings"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "taskName"
          in: "path"
          description: "Task name"
          required: true
          type: "string"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /taskToXml:
    post:
     tags:
     - "Designer"
     summary: "Returns a task as XML"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/task"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /isWorkflowIdValid/{id}:
    get:
     tags:
     - "Designer"
     summary: "Checks if a workflow id is valid"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "id"
          in: "path"
          description: "Workflow id"
          required: true
          type: "integer"
          format: "int64"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json" 
  
  /isCronExpressionValid:
    get:
     tags:
     - "Designer"
     summary: "Checks if a cron expression is valid"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: e
          type: "string"
          description: Cron expression
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  
  /isPeriodValid/{period}:
    get:
     tags:
     - "Designer"
     summary: "Checks if a workflow id is valid"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "period"
          in: "path"
          description: "period"
          required: true
          type: "string"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /isXmlWorkflowValid:
    post:
     tags:
     - "Designer"
     summary: "Checks if the XML of a workflow is valid"
     description: ""
     produces:
       - "application/json"
     parameters:
      - in: "body"
        name: "body"
        description: "XML"
        required: true
        schema:
          $ref: "#/definitions/isXmlWorkflowValid"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /saveXml:
    post:
     tags:
     - "Designer"
     summary: "Saves a workflow from XML"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/saveXml"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /save:
    post:
     tags:
     - "Designer"
     summary: "Saves a workflow from JSON"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/workflow"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /delete:
    post:
     tags:
     - "Designer"
     summary: "Deletes a workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: w
          type: "number"
          description: Workflow id   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /deleteWorkflows:
    post:
     tags:
     - "Designer"
     summary: "Deletes workflows"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/deleteWorkflows"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /graph/{id}:
    get:
     tags:
     - "Designer"
     summary: "Returns the execution graph of the workflow"
     description: ""
     produces:
       - "application/json"
     parameters:
        - name: "id"
          in: "path"
          description: "Workflow id"
          required: true
          type: "string"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /historyEntriesCountByDate:
    get:
     tags:
     - "History"
     summary: "Returns entries count by keyword and date filter"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword  
        - in: query
          name: from
          type: "number"
          description: From 
        - in: query
          name: to
          type: "number"
          description: To
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /searchHistoryEntriesByPageOrderBy:
    get:
     tags:
     - "History"
     summary: "Searches for entries"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: s
          type: "string"
          description: Keyword  
        - in: query
          name: from
          type: "number"
          description: From 
        - in: query
          name: to
          type: "number"
          description: To
        - in: query
          name: page
          type: "number"
          description: Page number
        - in: query
          name: entriesCount
          type: "number"
          description: Number of entries
        - in: query
          name: heo
          type: "number"
          description: Entry order by type (From 0 to 11)
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
    
  /historyEntryStatusDateMin:
    get:
     tags:
     - "History"
     summary: "Returns entry min date"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /historyEntryStatusDateMax:
    get:
     tags:
     - "History"
     summary: "Returns entry max date"
     description: ""
     produces:
       - "application/json"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /historyEntryLogs:
    get:
     tags:
     - "History"
     summary: "Returns history entry logs"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: id
          type: "string"
          description: Entry id
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"

  /user:
    get:
     tags:
     - "Users"
     summary: "Returns a user from his username"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: username
          type: "string"
          description: Username
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /searchUsers:
    get:
     tags:
     - "Users"
     summary: "Searches for users"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: keyword
          type: "string"
          description: Keyword
        - in: query
          name: uo
          type: "number"
          description: Order by type (0 or 1)   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /insertUser:
    post:
     tags:
     - "Users"
     summary: "Inserts a user"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: username
          type: "string"
          description: Username
        - in: query
          name: password
          type: "string"
          description: Password  
        - in: query
          name: up
          type: "number"
          description: User profile (From 0 to 2)
        - in: query
          name: email
          type: "string"  
          description: Email  
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /updateUser:
    post:
     tags:
     - "Users"
     summary: "Updates a user"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: userId
          type: "string"
          description: User id
        - in: query
          name: username
          type: "string"
          description: Username
        - in: query
          name: password
          type: "string"
          description: Password  
        - in: query
          name: up
          type: "number"
          description: User profile (From 0 to 2)
        - in: query
          name: email
          type: "string"  
          description: Email  
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /updateUsernameAndEmailAndUserProfile:
    post:
     tags:
     - "Users"
     summary: "Updates the username, the email and the user profile of a user"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: userId
          type: "string"
          description: User id
        - in: query
          name: username
          type: "string"
          description: Username
        - in: query
          name: password
          type: "string"
          description: Password  
        - in: query
          name: up
          type: "number"
          description: User profile (From 0 to 2)
        - in: query
          name: email
          type: "string"  
          description: Email  
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
  
  /deleteUser:
    post:
     tags:
     - "Users"
     summary: "Deletes a user"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: username
          type: "string"
          description: Username
        - in: query
          name: password
          type: "string"
          description: Password
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /resetPassword:
    post:
     tags:
     - "Users"
     summary: "Resets a password"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: username
          type: "string"
          description: Username
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"    
  
  /searchAdmins:
    get:
     tags:
     - "Profiles"
     summary: "Searches for administrators"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: keyword
          type: "string"
          description: Keyword
        - in: query
          name: uo
          type: "number"
          description: Order by type (0 or 1)   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /userWorkflows:
    get:
     tags:
     - "Profiles"
     summary: "Returns user workflows"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: query
          name: u
          type: "string"
          description: "User id"
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"
      
  /saveUserWorkflows:
    post:
     tags:
     - "Profiles"
     summary: "Saves user workflow relations"
     description: ""
     produces:
       - "application/json"
     parameters:
        - in: "body"
          name: "body"
          description: "Payload"
          required: true
          schema:
           $ref: "#/definitions/saveUserWorkflows"   
     responses:
        200:
          description: "successful operation"
     consumes:
      - "application/json"     

definitions:
  variable:
    type: "object"
    properties:
      Name: 
        type: "string"
      Value: 
        type: "string"
      
  startWithVariables:
    type: "object"
    properties:
       WorkflowId:
         type: "integer"
         format: "int64"
       Variables:   
         type: "array"
         items:
          $ref: "#/definitions/variable"
          
  saveXml: 
    type: "object"
    properties:
       workflowId:
         type: "integer"
         format: "int64"
       xml:
         type: "string"
         
  deleteWorkflows:
    type: "object"
    properties:
       WorkflowsToDelete:   
         type: "array"
         items:
           type: "integer"
           format: "int64"
           
  userWorkflow:
    type: "object"
    properties:
      UserId: 
        type: "string"
      WorkflowId: 
        type: "string"
        
  saveUserWorkflows:
    type: "object"
    properties:
       UserId:
         type: "string"
       UserWorkflows:   
         type: "array"
         items:
          $ref: "#/definitions/userWorkflow"
  
  attribute:
    type: "object"
    properties:
       Name:
         type: "string"
       Value:
         type: "string"
  
  setting:
    type: "object"
    properties:
       Name:
         type: "string"
       Value:
         type: "string"
       Attributes:   
         type: "array"
         items:
          $ref: "#/definitions/attribute"  
       
  task:
    type: "object"
    properties:
       Id:
         type: "integer"
         format: "int64"
       Name:
         type: "string"
       Description:
         type: "string"
       IsEnabled:
         type: "boolean"
       Settings:   
         type: "array"
         items:
          $ref: "#/definitions/setting"
  
  localVariable:
    type: "object"
    properties:
       Key:
         type: "string"
       Value:
         type: "string"
  
  workflowInfo:
    type: "object"
    properties:
       Id:
         type: "integer"
         format: "int64"
       IsApproval:
         type: "boolean"
       IsEnabled:
         type: "boolean"
       LaunchType:
         type: "integer"
         format: "int64"
       Name:
         type: "string"
       Description:
         type: "string"
       Period:
         type: "string"   
       CronExpression:
         type: "string"
       LocalVariables:   
         type: "array"
         items:
          $ref: "#/definitions/localVariable"
          
          
  workflow:
    type: "object"
    properties:
       WorkflowInfo:
          $ref: "#/definitions/workflowInfo"
       Tasks:   
         type: "array"
         items:
          $ref: "#/definitions/task"    
  
  isXmlWorkflowValid:
    type: "object"
    properties:
       xml:
         type: "string"

externalDocs:
  description: "Find out more about Wexflow"
  url: "https://wexflow.github.io"
